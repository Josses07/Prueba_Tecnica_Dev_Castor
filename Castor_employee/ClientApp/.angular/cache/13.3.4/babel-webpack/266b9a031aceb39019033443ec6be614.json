{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction EmployeeFormComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cargo_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cargo_r1.idCargo);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cargo_r1.nombre);\n  }\n}\n\nexport let EmployeeFormComponent = /*#__PURE__*/(() => {\n  class EmployeeFormComponent {\n    constructor(fb, employeeService, route, router) {\n      this.fb = fb;\n      this.employeeService = employeeService;\n      this.route = route;\n      this.router = router;\n      this.employeeId = null;\n      this.cargos = [{\n        idCargo: 1,\n        nombre: 'Scrum Master'\n      }, {\n        idCargo: 2,\n        nombre: 'Desarrollador'\n      }, {\n        idCargo: 3,\n        nombre: 'QA'\n      }, {\n        idCargo: 4,\n        nombre: 'PO'\n      }];\n      this.employeeForm = this.fb.group({\n        cedula: ['', Validators.required],\n        nombre: ['', Validators.required],\n        fotoPath: [''],\n        fechaIngreso: ['', Validators.required],\n        idCargo: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.route.paramMap.subscribe(params => {\n        const id = params.get('id');\n\n        if (id) {\n          this.employeeId = +id;\n          this.employeeService.getEmployee(this.employeeId).subscribe(employee => {\n            this.employeeForm.patchValue(employee);\n          });\n        }\n      });\n    }\n\n    onSubmit() {\n      if (this.employeeForm.valid) {\n        const employee = this.employeeForm.value;\n\n        if (this.employeeId) {\n          this.employeeService.updateEmployee(this.employeeId, employee).subscribe(() => {\n            this.router.navigate(['/employees']);\n          });\n        } else {\n          this.employeeService.addEmployee(employee).subscribe(() => {\n            this.router.navigate(['/employees']);\n          });\n        }\n      }\n    }\n\n  }\n\n  EmployeeFormComponent.ɵfac = function EmployeeFormComponent_Factory(t) {\n    return new (t || EmployeeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  EmployeeFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmployeeFormComponent,\n    selectors: [[\"app-employee-form\"]],\n    decls: 26,\n    vars: 5,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"cedula\"], [\"id\", \"cedula\", \"formControlName\", \"cedula\"], [\"for\", \"nombre\"], [\"id\", \"nombre\", \"formControlName\", \"nombre\"], [\"for\", \"fotoPath\"], [\"id\", \"fotoPath\", \"formControlName\", \"fotoPath\"], [\"for\", \"fechaIngreso\"], [\"type\", \"date\", \"id\", \"fechaIngreso\", \"formControlName\", \"fechaIngreso\"], [\"for\", \"idCargo\"], [\"id\", \"idCargo\", \"formControlName\", \"idCargo\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n    template: function EmployeeFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EmployeeFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Cedula\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n        i0.ɵɵtext(13, \"Foto\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\")(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Fecha Ingreso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\")(20, \"label\", 9);\n        i0.ɵɵtext(21, \"Cargo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 10);\n        i0.ɵɵtemplate(23, EmployeeFormComponent_option_23_Template, 2, 2, \"option\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.employeeId ? \"Edit\" : \"Add\", \" Employee\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.cargos);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.employeeForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.employeeId ? \"Update\" : \"Add\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.SelectControlValueAccessor, i4.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return EmployeeFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}